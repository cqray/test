plugins {
    id 'java'
    id 'maven-publish'
}

group 'org.example'
version '0.0.2'

apply plugin: 'java-library'
apply plugin: 'maven-publish'


repositories {
    mavenLocal()
    maven { url "https://maven.aliyun.com/repository/public" }
    mavenCentral()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}


//jar {
//    into("META-INF/") {
//        from rootProject.file("LICENSE")
//    }
//    into("META-INF/maven/$project.group/$project.name") {
//        from { generatePomFileForMavenJavaPublication }
//        rename ".*", "pom.xml"
//    }
//    afterEvaluate {
//        manifest {
//            attributes 'Implementation-Title': archiveBaseName
//            attributes 'Implementation-Version': archiveVersion
//            attributes 'Built-Gradle': gradle.gradleVersion
//            attributes 'Bundle-DocURL': 'https://baomidou.com/'
//            attributes 'Build-OS': System.getProperty("os.name")
//            attributes 'Built-By': System.getProperty("user.name")
//            attributes 'Build-Jdk': System.getProperty("java.version")
//            //attributes 'Build-Timestamp': LocalDateTime.now().format("yyyy-MM-dd HH:mm:ss")
//            attributes 'Automatic-Module-Name': "${project.group}.${project.name.replaceAll("-", ".")}"
//        }
//    }
//}


//publishing {
//    repositories {
////        maven {
////            def userName = System.getProperty("un")
////            def passWord = System.getProperty("ps")
////            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
////            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
////            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
////
////            credentials {
////                username userName
////                password passWord
////            }
////        }
//    }
//    publications {
//
//        mavenJava(MavenPublication) {
//            from components.java
//
////            artifact sourcesJar
////            artifact javadocJar
//
//            pom {
//                name = 'mybatis-plus'
//                packaging 'jar'
//                description = 'An enhanced toolkit of Mybatis to simplify development.'
//                url = 'https://github.com/baomidou/mybatis-plus'
//
////                scm {
////                    connection = 'scm:git@github.com:Codearte/gradle-nexus-staging-plugin.git'
////                    developerConnection = 'scm:git@github.com:Codearte/gradle-nexus-staging-plugin.git'
////                    url = 'https://github.com/baomidou/mybatis-plus'
////                }
////
////                licenses {
////                    license {
////                        name = 'The Apache License, Version 2.0'
////                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
////                    }
////                }
////
////                developers {
////                    developer {
////                        id = 'baomidou'
////                        name = 'hubin'
////                        email = 'jobob@qq.com'
////                    }
////                }
//
//                withXml {
//                    def root = asNode()
//                    root.dependencies.'*'.findAll {
//                        def d = it
//                        d.scope.text() == 'runtime' && project.configurations.findByName("implementation").allDependencies.find { dep ->
//                            dep.name == it.artifactId.text()
//                        }.each() {
//                            d.scope*.value = 'compile'
//                            d.appendNode('optional', true)
//                        }
//                    }
//                }
//            }
//        }
//    }
//
////    signing {
////        sign publishing.publications.mavenJava
////    }
//}

dependencies {
    //testCompile group: 'junit', name: 'junit', version: '4.12'
}